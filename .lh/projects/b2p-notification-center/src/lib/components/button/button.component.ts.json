{
    "sourceFile": "projects/b2p-notification-center/src/lib/components/button/button.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1681111011363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681111194165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n   onClick(): void {\r\n \r\n     if (this.config.clicked$) {\r\n \r\n-      this.config.clicked$.next();\r\n+      this.config.clicked$.next(\"a\");\r\n \r\n       if (this.isToggleButton) {\r\n         this.toggleStatus();\r\n       }\r\n"
                },
                {
                    "date": 1681111440965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n   tooltipActive?: string;\r\n   tooltipTheme?: string;\r\n   tooltipOrientation?: string;\r\n   active$?: BehaviorSubject<boolean>;\r\n-  clicked$?: Subject<never>;\r\n+  clicked$?: Subject<string>;\r\n   onClick?: any;\r\n   onClick2?: (active: boolean) => void;\r\n }\r\n \r\n@@ -167,11 +167,10 @@\n \r\n   onClick(): void {\r\n \r\n     if (this.config.clicked$) {\r\n+      this.config.clicked$.next(\"\");\r\n \r\n-      this.config.clicked$.next(\"a\");\r\n-\r\n       if (this.isToggleButton) {\r\n         this.toggleStatus();\r\n       }\r\n     } else {\r\n"
                },
                {
                    "date": 1681115319429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n \r\n   onClick(): void {\r\n \r\n     if (this.config.clicked$) {\r\n-      this.config.clicked$.next(\"\");\r\n+      this.config.clicked$.next('');\r\n \r\n       if (this.isToggleButton) {\r\n         this.toggleStatus();\r\n       }\r\n"
                }
            ],
            "date": 1681111011363,
            "name": "Commit-0",
            "content": "/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\n\r\nexport const enum UI_BUTTON_VARIANTS {\r\n  SIMPLE = 'simple',\r\n  TOGGLE = 'toggle'\r\n}\r\n\r\nexport const enum UI_BUTTON_STYLES {\r\n  SOLID = 'solid',\r\n  LINED = 'lined',\r\n  ICON = 'icon'\r\n}\r\n\r\nexport const enum UI_BUTTON_THEMES {\r\n  PRIMARY = 'primary',\r\n  SECONDARY = 'secondary'\r\n}\r\n\r\nexport const enum UI_BUTTON_ICON_STYLE {\r\n  LIGHT = 'fal',\r\n  REGULAR = 'far',\r\n  SOLID = 'fas',\r\n  BRANDS = 'fab'\r\n}\r\n\r\nexport const enum UI_BUTTON_TOOLTIP_THEME {\r\n  PRIMARY = 'primary',\r\n  SECONDARY = 'secondary'\r\n}\r\n\r\nexport const enum UI_BUTTON_TOOLTIP_ORIENTATION {\r\n  LEFT_BOTTOM = 'left-bottom',\r\n  CENTER_BOTTOM = 'center-bottom',\r\n  LEFT_MIDDLE = 'left-middle',\r\n  RIGHT_MIDDLE = 'right-middle',\r\n  CENTER_TOP = 'center-top',\r\n}\r\n\r\nexport interface UiButtonConfig {\r\n  buttonVariant?: string;\r\n  buttonStyle?: string;\r\n  buttonTheme?: string;\r\n  buttonLabel?: string;\r\n  iconStyle?: string;\r\n  iconStyleActive?: string;\r\n  iconName?: string;\r\n  iconSVG?: string;\r\n  iconNameActive?: string;\r\n  iconSVGActive?: string;\r\n  tooltip?: string;\r\n  tooltipActive?: string;\r\n  tooltipTheme?: string;\r\n  tooltipOrientation?: string;\r\n  active$?: BehaviorSubject<boolean>;\r\n  clicked$?: Subject<never>;\r\n  onClick?: any;\r\n  onClick2?: (active: boolean) => void;\r\n}\r\n\r\n@Component({\r\n  selector: 'b2p-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class B2PButtonComponent implements OnInit, OnDestroy {\r\n\r\n  // PROPERTIES /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  @Input()\r\n  config!: UiButtonConfig;\r\n  @Input()\r\n  badged!: boolean | number;\r\n\r\n  active = false;\r\n\r\n  currentIconStyle!: string;\r\n  currentIconName!: string;\r\n  currentIconSVG!: SafeHtml;\r\n  currentTooltip!: string;\r\n\r\n  activeSubscription!: Subscription;\r\n\r\n  constructor(private domSanitizer: DomSanitizer) { }\r\n\r\n  get isToggleButton(): boolean {\r\n    return this.config.buttonVariant === UI_BUTTON_VARIANTS.TOGGLE;\r\n  }\r\n\r\n  public get isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  @Input()\r\n  public set isActive(value: boolean) {\r\n    if (value !== this.active) {\r\n      this.toggleStatus({ propagate: false });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.config.buttonVariant = this.config.buttonVariant || UI_BUTTON_VARIANTS.SIMPLE;\r\n    this.config.buttonStyle = this.config.buttonStyle || UI_BUTTON_STYLES.LINED;\r\n    this.config.buttonTheme = this.config.buttonTheme || UI_BUTTON_THEMES.PRIMARY;\r\n    this.config.iconStyle = this.config.iconStyle || UI_BUTTON_ICON_STYLE.SOLID;\r\n    this.config.tooltipTheme = this.config.tooltipTheme || this.config.buttonTheme;\r\n\r\n    this.config.iconStyleActive = this.config.iconStyleActive || this.config.iconStyle;\r\n    this.config.iconNameActive = this.config.iconNameActive || this.config.iconName;\r\n    this.config.iconSVGActive = this.config.iconSVGActive || this.config.iconSVG;\r\n    this.config.tooltipActive = this.config.tooltipActive || this.config.tooltip;\r\n\r\n    this.currentIconStyle = this.config.iconStyle;\r\n    this.currentIconName = this.config.iconName;\r\n    this.currentIconSVG = this.domSanitizer.bypassSecurityTrustHtml(this.config.iconSVG);\r\n    this.currentTooltip = this.config.tooltip;\r\n\r\n    if (this.config.active$ === undefined) {\r\n      this.config.active$ = new BehaviorSubject<boolean>(false);\r\n    }\r\n\r\n    // if (this.config.clicked$ === undefined) {\r\n    // \tthis.config.clicked$ = new Subject<never>();\r\n    // }\r\n\r\n    this.activeSubscription = this.config.active$.subscribe(active => {\r\n      if (active !== undefined && active !== this.active) {\r\n        this.toggleStatus({ propagate: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.activeSubscription) {\r\n      this.activeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // •◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦•◦\r\n\r\n  toggleStatus({ propagate = true } = {}): void {\r\n\r\n    this.active = !this.active;\r\n\r\n    this.currentIconStyle = this.active ? this.config.iconStyleActive : this.config.iconStyle;\r\n    this.currentIconName = this.active ? this.config.iconNameActive : this.config.iconName;\r\n    this.currentIconSVG = this.domSanitizer.bypassSecurityTrustHtml(this.active ? this.config.iconSVGActive : this.config.iconSVG);\r\n    this.currentTooltip = this.active ? this.config.tooltipActive : this.config.tooltip;\r\n\r\n    if (propagate) {\r\n\r\n      this.config.active$.next(this.active);\r\n\r\n      if (this.config.onClick2) {\r\n        this.config.onClick2(this.active);\r\n      }\r\n    }\r\n  }\r\n\r\n  // PROTECTED FUNCTIONS ////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // PRIVATE FUNCTIONS //////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // EVENT HANDLER //////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  onClick(): void {\r\n\r\n    if (this.config.clicked$) {\r\n\r\n      this.config.clicked$.next();\r\n\r\n      if (this.isToggleButton) {\r\n        this.toggleStatus();\r\n      }\r\n    } else {\r\n\r\n      if (this.isToggleButton) {\r\n        this.toggleStatus();\r\n      }\r\n    }\r\n  }\r\n\r\n  wiggle(rem: number): boolean {\r\n    return this.badged > 0 && ((+this.badged % 2) === rem) && !this.active;\r\n  }\r\n}\r\n"
        }
    ]
}