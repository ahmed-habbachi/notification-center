{
    "sourceFile": "projects/b2p-notification-center/src/lib/components/base-notification/base-notification.component.spec.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1681112178246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1681112178246,
            "name": "Commit-0",
            "content": "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { BaseNotificationComponent } from './base-notification.component';\r\nimport { Notification } from '../../types/notification.type';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NotificationType } from '../../types/notification-type.enum';\r\nimport { NotificationAnimationType } from '../../types/notification-animation-type.enum';\r\nimport { NotificationCenterService } from '../../notification-center.service';\r\nimport { OPTIONS, optionsFactory } from '../../notification-center.module';\r\n\r\ndescribe('BaseNotificationComponent', () => {\r\n  let component: BaseNotificationComponent;\r\n  let fixture: ComponentFixture<BaseNotificationComponent>;\r\n  let sanitizer: DomSanitizer;\r\n  const defaultNotification: Notification = {\r\n    id: '0',\r\n    title: 'Test title',\r\n    type: NotificationType.success,\r\n    content: 'Test Content',\r\n    maxLength: 0,\r\n    animate: NotificationAnimationType.fromTop,\r\n    createdOn: new Date(),\r\n    destroyedOn: new Date()\r\n  };\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [BrowserAnimationsModule],\r\n      declarations: [BaseNotificationComponent],\r\n      providers: [\r\n        NotificationCenterService,\r\n        {\r\n          provide: OPTIONS,\r\n          useValue: {}\r\n        }, {\r\n          provide: 'options',\r\n          useFactory: optionsFactory,\r\n          deps: [OPTIONS]\r\n        },\r\n      ]\r\n    })\r\n      .compileComponents();\r\n    sanitizer = TestBed.inject(DomSanitizer);\r\n  });\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(BaseNotificationComponent);\r\n    component = fixture.componentInstance;\r\n    component.item = defaultNotification;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should init Notification title', () => {\r\n    expect(component.title).toEqual(sanitizer.bypassSecurityTrustHtml('Test title'));\r\n    expect(component.content).toEqual(sanitizer.bypassSecurityTrustHtml('Test Content'));\r\n  });\r\n});\r\n"
        }
    ]
}